openapi: 3.0.0
servers:
  - url: https://{environment}.osis.uclouvain.be/api/v1/base/
    variables:
      environment:
        default: dev
        enum:
          - dev # Development server
          - qa # Staging server
          - test # Test server
  - url: https://osis.uclouvain.be/api/v1/base/
    description: 'Production server'
info:
  version: '1.0'
  title: 'Base Service'
  description: |-
    A set of API endpoints that allow you to get information about persons, academic years
paths:
  /person/{global_id}/roles:
    get:
      description: 'Return roles of specified person by its global id'
      operationId: person_roles
      parameters:
        - in: path
          name: global_id
          required: true
          description: The person global id
          schema:
            type: string
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/X-User-FirstName'
        - $ref: '#/components/parameters/X-User-LastName'
        - $ref: '#/components/parameters/X-User-Email'
        - $ref: '#/components/parameters/X-User-GlobalID'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonRoles'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      tags:
        - persons
  /academic_years:
    get:
      description: 'Return the list of academic years'
      operationId: get_academic_years
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/X-User-FirstName'
        - $ref: '#/components/parameters/X-User-LastName'
        - $ref: '#/components/parameters/X-User-Email'
        - $ref: '#/components/parameters/X-User-GlobalID'
        - $ref: '#/components/parameters/PaginationLimit'
        - $ref: '#/components/parameters/PaginationOffset'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedAcademicYears'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      tags:
        - academic_years
components:
  securitySchemes:
    Token:
      type: apiKey
      in: header
      name: Authorization
      description: Enter your token in the format **Token &lt;token>**
  parameters:
    PaginationLimit:
      in: query
      name: limit
      description: Limit of paginated results
      schema:
        type: integer
        example: 25
    PaginationOffset:
      in: query
      name: offset
      description: Offset of paginated results
      schema:
        type: integer
        example: 25
    X-User-FirstName:
      in: header
      name: X-User-FirstName
      schema:
        type: string
      required: false
    X-User-LastName:
      in: header
      name: X-User-LastName
      schema:
        type: string
      required: false
    X-User-Email:
      in: header
      name: X-User-Email
      schema:
        type: string
      required: false
    X-User-GlobalID:
      in: header
      name: X-User-GlobalID
      schema:
        type: string
      required: false
    Accept-Language:
      in: header
      name: Accept-Language
      description: >
        The header advertises which languages the client is able to understand, and which locale variant is preferred. (By languages, we mean natural languages, such as English, and not programming languages.)
      schema:
        $ref: '#/components/schemas/AcceptedLanguageEnum'
      required: false
  responses:
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    BadRequest:
      description: Bad request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    NotFound:
      description: The specified resource was not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
  schemas:
    PersonRoles:
      type: object
      properties:
        global_id:
          type: string
        roles:
          $ref: '#/components/schemas/Roles'
    Roles:
      type: object
      properties:
        reddot:
          $ref: '#/components/schemas/RolesReddot'
        program_manager:
          $ref: '#/components/schemas/RolesProgramManager'
    RolesReddot:
      type: object
      properties:
        description:
          type: string
        scope:
          type: array
          items:
            type: string
    RolesProgramManager:
      type: object
      properties:
        description:
          type: string
        scope:
          type: array
          items:
            $ref: '#/components/schemas/Program'
    Program:
      type: object
      properties:
        acronym:
          type: string
          example: 'FSA1BA'
        year:
          type: integer
          example: 2021
    Paging:
      type: object
      properties:
        count:
          type: integer
        next:
          type: string
          format: uri
          nullable: true
        previous:
          type: string
          format: uri
          nullable: true
    PaginatedAcademicYears:
      allOf:
        - $ref: '#/components/schemas/Paging'
        - type: object
          properties:
            results:
              type: array
              items:
                $ref: '#/components/schemas/AcademicYear'
    AcademicYear:
      type: object
      properties:
        year:
          type: integer
          example: 2021
        start_date:
          type: string
          format: date
          example: '2021-09-17'
        end_date:
          type: string
          format: date
          example: '2021-09-17'
    AcceptedLanguageEnum:
      type: string
      enum:
        - 'en'
        - 'fr-be'
    Error:
      type: object
      properties:
        code:
          type: string
        message:
          type: string
      required:
        - code
        - message
security:
  - Token: [ ]
