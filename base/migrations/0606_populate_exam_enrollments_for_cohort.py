# Generated by Django 2.2.13 on 2021-08-31 10:20

from django.db import migrations
from django.db.models import OuterRef, Exists

ACADEMIC_YEAR = 2021


def get_11ba_offer_enrollments(apps):
    OfferEnrollment = apps.get_model("base", "OfferEnrollment")

    return OfferEnrollment.objects.filter(
        education_group_year__acronym__icontains="11BA"
    ).select_related(
        "education_group_year",
        "education_group_year__academic_year"
    )


def get_cohort_years(apps):
    CohortYear = apps.get_model("education_group", "CohortYear")
    return CohortYear.objects.all().values(
        "id",
        "education_group_year",
        "education_group_year__acronym",
        "education_group_year__academic_year__year"
    )


def migrate_enrollment_to_use_cohort(
        apps,
        enrollment,
        dict_education_group_year_by_acronym_year,
        dict_cohort_by_education_group_year
):
    bachelor_name = enrollment.education_group_year.acronym.replace('11BA', '1BA')
    year = enrollment.education_group_year.academic_year.year
    equivalent_education_group_year = dict_education_group_year_by_acronym_year[
        (bachelor_name, year)
    ]

    cohort = dict_cohort_by_education_group_year[equivalent_education_group_year]

    enrollment.education_group_year_id = equivalent_education_group_year
    enrollment.cohort_year_id = cohort
    enrollment.save()


def get_corresponding_1ba_education_group(
        education_group_11ba,
        dict_acronym_by_education_group,
        dict_education_group_by_acronym
):
    acronym_11ba = dict_acronym_by_education_group[education_group_11ba.id]
    education_group_1ba = dict_education_group_by_acronym[acronym_11ba.replace('11BA', '1BA')]
    return education_group_1ba


def populate_exam_enrollments_for_cohort_11ba(apps, schema_editor):
    print("Create program manager for cohort 11ba")
    offer_enrollments = get_11ba_offer_enrollments(apps)

    cohort_years = get_cohort_years(apps)

    dict_cohort_by_education_group_year = {
        row["education_group_year"]: row["id"]
        for row in cohort_years
    }

    dict_education_group_year_by_acronym_year = {
        (row["education_group_year__acronym"], row['education_group_year__academic_year__year']): row["education_group_year"]
        for row in cohort_years
    }

    for enrollment in offer_enrollments:
        migrate_enrollment_to_use_cohort(
            apps,
            enrollment,
            dict_education_group_year_by_acronym_year,
            dict_cohort_by_education_group_year
        )
        print("{}".format(str(enrollment)))


class Migration(migrations.Migration):

    dependencies = [
        ('base', '0605_create_program_manager_for_11ba'),
    ]

    operations = [
        migrations.RunPython(
            populate_exam_enrollments_for_cohort_11ba
        ),
    ]
