openapi: 3.0.0
servers:
 - url: https://{environment}.osis.uclouvain.be/api/v1/reference/
   variables:
     environment:
       default: dev
       enum:
         - dev # Development server
         - qa # Staging server
         - test # Test server
 - url: https://osis.uclouvain.be/api/v1/reference/
   description: Production server
info:
  version: '1.14'
  title: Reference Service
  description: |-
    A set of API endpoints that allow you to get reference data.
paths:
  /countries/:
    get:
      description: Return a list of countries with optional filtering.
      operationId: countries_list
      parameters:
        - in: query
          name: search
          schema:
            description: A search term which will look up at country name
            type: string
        - in: query
          name: iso_code
          schema:
            description: Search by ISO 3166-1 2-letter country code
            type: string
        - in: query
          name: name
          schema:
            description: Search by country name. It can be partial/full name
            type: string
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/X-User-FirstName'
        - $ref: '#/components/parameters/X-User-LastName'
        - $ref: '#/components/parameters/X-User-Email'
        - $ref: '#/components/parameters/X-User-GlobalID'
        - $ref: '#/components/parameters/PaginationLimit'
        - $ref: '#/components/parameters/PaginationOffset'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCountry'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - countries
  /countries/{uuid}:
    get:
      description: Return the detail of country
      operationId: countries_read
      parameters:
        - in: path
          name: uuid
          required: true
          schema:
            description: Universal unique identifier in version 4
            type: string
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/X-User-FirstName'
        - $ref: '#/components/parameters/X-User-LastName'
        - $ref: '#/components/parameters/X-User-Email'
        - $ref: '#/components/parameters/X-User-GlobalID'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Country'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      tags:
        - countries
  /cities/:
    get:
      description: Return a list of cities with optional filtering.
      operationId: cities_list
      parameters:
        - in: query
          name: search
          schema:
            description: A search term which will look up at city name, zipcode or country iso code
            type: string
        - in: query
          name: zip_code
          schema:
            description: Search by zip code
            type: string
        - in: query
          name: name
          schema:
            description: Search by city name. It can be partial/full name
            type: string
        - in: query
          name: country_iso_code
          schema:
            description: Search by ISO 3166-1 2-letter country code
            type: string
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/X-User-FirstName'
        - $ref: '#/components/parameters/X-User-LastName'
        - $ref: '#/components/parameters/X-User-Email'
        - $ref: '#/components/parameters/X-User-GlobalID'
        - $ref: '#/components/parameters/PaginationLimit'
        - $ref: '#/components/parameters/PaginationOffset'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCity'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
        - cities
  /study-domains:
    get:
      description: Return a list of study domains. By default, it will return all official main study domains.
      operationId: study_domains_list
      parameters:
        - in: query
          name: search
          schema:
            description: A search term which will look up at study domain name
            type: string
        - in: query
          name: decree
          schema:
            description: Filter on a specific decree
            type: string
            enum:
              - 'BEFORE_BOLOGNE'
              - 'BOLOGNE'
              - 'PAYSAGE'
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/X-User-FirstName'
        - $ref: '#/components/parameters/X-User-LastName'
        - $ref: '#/components/parameters/X-User-Email'
        - $ref: '#/components/parameters/X-User-GlobalID'
        - $ref: '#/components/parameters/PaginationLimit'
        - $ref: '#/components/parameters/PaginationOffset'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedStudyDomain'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
        - study-domains
  /languages:
    get:
      description: Return a list of languages
      operationId: languages_list
      parameters:
        - in: query
          name: search
          schema:
            description: A search term which will look up at language name (french or english)
            type: string
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/X-User-FirstName'
        - $ref: '#/components/parameters/X-User-LastName'
        - $ref: '#/components/parameters/X-User-Email'
        - $ref: '#/components/parameters/X-User-GlobalID'
        - $ref: '#/components/parameters/PaginationLimit'
        - $ref: '#/components/parameters/PaginationOffset'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedLanguage'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
        - languages
  /academic_years:
    get:
      description: 'Return the list of academic years'
      operationId: get_academic_years
      parameters:
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/X-User-FirstName'
        - $ref: '#/components/parameters/X-User-LastName'
        - $ref: '#/components/parameters/X-User-Email'
        - $ref: '#/components/parameters/X-User-GlobalID'
        - $ref: '#/components/parameters/PaginationLimit'
        - $ref: '#/components/parameters/PaginationOffset'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedAcademicYears'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
        - academic_years
  /academic_calendars/:
    get:
      description: Return a list of academic calendars with optional filtering.
      operationId: academic_calendars_list
      parameters:
        - in: query
          name: data_year
          schema:
            description: Search by data_year
            type: integer
        - in: query
          name: reference
          schema:
            description: Search by reference
            type: string
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/X-User-FirstName'
        - $ref: '#/components/parameters/X-User-LastName'
        - $ref: '#/components/parameters/X-User-Email'
        - $ref: '#/components/parameters/X-User-GlobalID'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AcademicCalendar'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
        - academic_calendars
components:
  securitySchemes:
    Token:
      type: apiKey
      in: header
      name: Authorization
      description: Enter your token in the format **Token &lt;token>**
  parameters:
    PaginationLimit:
      in: query
      name: limit
      description: Limit of paginated results
      schema:
        type: integer
        example: 25
    PaginationOffset:
      in: query
      name: offset
      description: Offset of paginated results
      schema:
        type: integer
        example: 25
    X-User-FirstName:
      in: header
      name: X-User-FirstName
      schema:
        type: string
      required: false
    X-User-LastName:
      in: header
      name: X-User-LastName
      schema:
        type: string
      required: false
    X-User-Email:
      in: header
      name: X-User-Email
      schema:
        type: string
      required: false
    X-User-GlobalID:
      in: header
      name: X-User-GlobalID
      schema:
        type: string
      required: false
    Accept-Language:
      in: header
      name: Accept-Language
      description: >
        The header advertises which languages the client is able to understand, and which locale variant is preferred. (By languages, we mean natural languages, such as English, and not programming languages.)
      schema:
        $ref: '#/components/schemas/AcceptedLanguageEnum'
      required: false
  responses:
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    BadRequest:
      description: Bad request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    NotFound:
      description: The specified resource was not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
  schemas:
    Paging:
      type: object
      properties:
        count:
          type: integer
        next:
          type: string
          format: uri
          nullable: true
        previous:
          type: string
          format: uri
          nullable: true
    PaginatedCountry:
      allOf:
        - $ref: '#/components/schemas/Paging'
        - type: object
          properties:
            results:
              type: array
              items:
                $ref: '#/components/schemas/Country'
    PaginatedCity:
      allOf:
        - $ref: '#/components/schemas/Paging'
        - type: object
          properties:
            results:
              type: array
              items:
                $ref: '#/components/schemas/City'
    City:
      type: object
      properties:
        name:
          type: string
          description: The name of the city
          example: "Louvain-la-Neuve"
        country_iso_code:
          type: string
          description: The country code according to ISO 3166-1 specification
          example: "BE"
        zip_code:
          type: string
          description: The zipcode of the city
          example: "1348"
    Country:
      type: object
      properties:
        url:
          type: string
          format: uri
        uuid:
          type: string
          format: uuid
        iso_code:
          type: string
          description: |
            The country code according to ISO 3166-1 specification
        name:
          type: string
          description: The french name of the country
        name_en:
          type: string
          description: The english name of the country
        nationality:
          type: string
          description: The nationality of the country
          nullable: true
    PaginatedStudyDomain:
      allOf:
        - $ref: '#/components/schemas/Paging'
        - type: object
          properties:
            results:
              type: array
              items:
                $ref: '#/components/schemas/StudyDomain'
    StudyDomain:
      type: object
      properties:
        uuid:
          type: string
          description: The identifier of study domain
        code:
          type: string
          description: The code of study domain
        name:
          type: string
          description: The name of study domain
    PaginatedLanguage:
      allOf:
        - $ref: '#/components/schemas/Paging'
        - type: object
          properties:
            results:
              type: array
              items:
                $ref: '#/components/schemas/Language'
    PaginatedAcademicYears:
      allOf:
        - $ref: '#/components/schemas/Paging'
        - type: object
          properties:
            results:
              type: array
              items:
                $ref: '#/components/schemas/AcademicYear'
    AcademicYear:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
        year:
          type: integer
          example: 2021
        start_date:
          type: string
          format: date
          example: '2021-09-17'
        end_date:
          type: string
          format: date
          example: '2021-09-17'
    AcademicCalendar:
      type: object
      properties:
        reference:
          type: string
          description: The reference of the academic calendar
        title:
          type: string
          description: The title of the academic calendar
        data_year:
          type: integer
          description: The academic year which the calendar relates to
          example: 2021
        start_date:
          type: string
          format: date
          example: '2019-08-17'
        end_date:
          type: string
          format: date
          example: '2020-07-15'
    Language:
      type: object
      properties:
        code:
          type: string
          description: The language iso_code
        name:
          type: string
          description: The language name in french
        name_en:
          type: string
          description: The language name in english
    AcceptedLanguageEnum:
      type: string
      enum:
        - 'en'
        - 'fr-be'
    Error:
      type: object
      properties:
        code:
          type: string
        message:
          type: string
      required:
      - code
      - message
security:
  - Token: []
