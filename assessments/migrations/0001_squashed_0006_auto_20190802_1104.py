# Generated by Django 2.2.5 on 2020-01-04 00:35

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):
    replaces = [('assessments', '0001_initial'), ('assessments', '0002_auto_20170428_1702'),
                ('assessments', '0003_scoresheetaddress'), ('assessments', '0004_auto_20180807_1229'),
                ('assessments', '0005_auto_20190128_1631'), ('assessments', '0006_auto_20190802_1104'),
                ('assessments', '0002_scoresheetaddress_education_group'),
                ('assessments', '0003_remove_scoresheetaddress_offer_year')]

    initial = True

    dependencies = [
        ('base', '0152_auto_20170905_1317'),
        ('reference', '0016_auto_20170410_1318'),
    ]

    operations = [
        migrations.CreateModel(
            name='ScoresEncoding',
            fields=[
                ('id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('total_exam_enrollments', models.IntegerField()),
                ('exam_enrollments_encoded', models.IntegerField()),
                ('scores_not_yet_submitted', models.IntegerField()),
                ('enrollment_state', models.CharField(choices=[('ENROLLED', 'ENROLLED'), ('NOT_ENROLLED', 'NOT_ENROLLED')], default='ENROLLED', max_length=20)),
            ],
            options={
                'db_table': 'app_scores_encoding',
                'managed': False,
                'permissions': (('can_access_scoreencoding', 'Can access scoreencoding'),),
            },
        ),
        migrations.AlterModelTable(
            name='scoresencoding',
            table=None,
        ),
        migrations.CreateModel(
            name='ScoreSheetAddress',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('external_id', models.CharField(blank=True, db_index=True, max_length=100, null=True)),
                ('changed', models.DateTimeField(auto_now=True, null=True)),
                ('entity_address_choice', models.CharField(blank=True, choices=[('ENTITY_ADMINISTRATION', 'ENTITY_ADMINISTRATION'), ('ENTITY_ADMINISTRATION_PARENT', 'ENTITY_ADMINISTRATION_PARENT'), ('ENTITY_MANAGEMENT', 'ENTITY_MANAGEMENT'), ('ENTITY_MANAGEMENT_PARENT', 'ENTITY_MANAGEMENT_PARENT')], max_length=50, null=True)),
                ('recipient', models.CharField(blank=True, max_length=255, null=True)),
                ('location', models.CharField(blank=True, max_length=255, null=True)),
                ('postal_code', models.CharField(blank=True, max_length=20, null=True)),
                ('city', models.CharField(blank=True, max_length=255, null=True)),
                ('phone', models.CharField(blank=True, max_length=30, null=True, verbose_name='Phone')),
                ('fax', models.CharField(blank=True, max_length=30, null=True, verbose_name='Fax')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Email')),
                ('country', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='reference.Country')),
                ('education_group', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='base.EducationGroup')),
            ],
        ),
        migrations.AlterModelOptions(
            name='scoresencoding',
            options={'managed': False, 'permissions': (('can_access_scoreencoding', 'Can access scoreencoding'), ('change_scoresresponsible', 'Can change scores responsible'), ('view_scoresresponsible', 'Can view scores responsible'))},
        ),
    ]
