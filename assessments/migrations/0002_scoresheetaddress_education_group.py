# Generated by Django 2.2.13 on 2021-01-13 09:56

from django.db import migrations, models
import django.db.models.deletion


def set_education_group_id_field(apps, schema_editor):
    EducationGroupYear = apps.get_model('base', 'educationgroupyear')
    OfferYear = apps.get_model('base', 'offeryear')
    ScoreSheetAddress = apps.get_model('assessments', 'scoresheetaddress')
    current_year = 2019  # TODO :: change to 2020
    educ_group_years = EducationGroupYear.objects.filter(
        academic_year__year=current_year
    ).values(
        'acronym',
        'education_group_id',
    )
    educ_group_id_by_acronym = {
        egy['acronym']: egy['education_group_id'] for egy in educ_group_years
    }
    to_update = []
    existing_score_sheet_addresses = list(
        ScoreSheetAddress.objects.filter(
            offer_year__academic_year__year=current_year
        ).select_related(
            'offer_year'
        )
    )
    to_remove = []
    for obj in existing_score_sheet_addresses:
        education_group_id = educ_group_id_by_acronym.get(obj.offer_year.acronym)
        if not education_group_id:
            educ_group_year = EducationGroupYear.objects.filter(
                acronym=obj.offer_year.acronym
            ).order_by(
                'academic_year__year'
            ).last()
            if not educ_group_year:
                msg = 'ERROR :: no education_group_id found for {} (this record will be removed)'.format(
                    obj.offer_year.acronym
                )
                to_remove.append(obj)
                print(msg)
            else:
                education_group_id = educ_group_year.education_group_id
        obj.education_group_id = education_group_id
        to_update.append(obj)
    ScoreSheetAddress.objects.bulk_update(to_update, ['education_group_id'], batch_size=1000)
    ScoreSheetAddress.objects.exclude(offer_year__academic_year__year=current_year).delete()
    ScoreSheetAddress.objects.filter(pk__in={obj.pk for obj in to_remove}).delete()


#  TODO :: remove this and add migration file to remove OfferYear from ScoreSheetAddress
"""
select distinct year 
from assessments_scoresheetaddress addr
join base_offeryear bo on addr.offer_year_id = bo.id
join base_academicyear ba on bo.academic_year_id = ba.id

"""


class Migration(migrations.Migration):

    dependencies = [
        ('assessments', '0001_squashed_0006_auto_20190802_1104'),
    ]

    operations = [
        migrations.AddField(
            model_name='scoresheetaddress',
            name='education_group',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='base.EducationGroup'),
        ),
        migrations.RunPython(set_education_group_id_field),
        migrations.AlterField(
            model_name='scoresheetaddress',
            name='education_group',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='base.EducationGroup'),
        ),
    ]
