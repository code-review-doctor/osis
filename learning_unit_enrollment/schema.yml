openapi: 3.0.0
servers:
 - url: https://{environment}.osis.uclouvain.be/api/v1/learning_unit_enrollment/
   variables:
     environment:
       default: dev
       enum:
         - dev # Development server
         - qa # Staging server
         - test # Test server
 - url: https://osis.uclouvain.be/api/v1/learning_unit_enrollment/
   description: 'Production server'
info:
  version: '1.0'
  title: 'Learning Unit Enrollment Service'
  description: |-
    A set of API endpoints that allow you to get information about learning unit enrollment
paths:
  /enrollments/{acronym}/{year}/:
    get:
      description: 'Return all enrollments of a given learning unit year'
      operationId: enrollments_list
      parameters:
        - in: path
          name: acronym
          required: true
          description: The learning unit acronym
          schema:
            type: string
            example: "LABCD1234"
        - in: path
          name: year
          required: true
          description: The learning unit academic year
          schema:
            type: integer
            example: 2021
        - in: query
          name: search
          schema:
            type: string
          required: false
        - in: query
          name: ordering
          schema:
            type: string
          required: false
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/X-User-FirstName'
        - $ref: '#/components/parameters/X-User-LastName'
        - $ref: '#/components/parameters/X-User-Email'
        - $ref: '#/components/parameters/X-User-GlobalID'
        - $ref: '#/components/parameters/PaginationLimit'
        - $ref: '#/components/parameters/PaginationOffset'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedEnrollmentList'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      tags:
        - enrollment
  /my_enrollments/{program_code}/{year}/:
    get:
      description: 'Return all enrollments of the connected user based on an offer enrollment'
      operationId: my_enrollments_list
      parameters:
        - in: path
          name: program_code
          required: true
          description: The offer acronym
          schema:
            type: string
            example: "FSA1BA"
        - in: path
          name: year
          required: true
          description: The offer academic year
          schema:
            type: integer
            example: 2021
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/X-User-FirstName'
        - $ref: '#/components/parameters/X-User-LastName'
        - $ref: '#/components/parameters/X-User-Email'
        - $ref: '#/components/parameters/X-User-GlobalID'
        - $ref: '#/components/parameters/PaginationLimit'
        - $ref: '#/components/parameters/PaginationOffset'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedEnrollmentList'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      tags:
        - enrollment
components:
  securitySchemes:
    Token:
      type: apiKey
      in: header
      name: Authorization
      description: Enter your token in the format **Token &lt;token>**
  parameters:
    PaginationLimit:
      in: query
      name: limit
      description: Limit of paginated results
      schema:
        type: integer
        example: 25
    PaginationOffset:
      in: query
      name: offset
      description: Offset of paginated results
      schema:
        type: integer
        example: 25
    X-User-FirstName:
      in: header
      name: X-User-FirstName
      schema:
        type: string
      required: false
    X-User-LastName:
      in: header
      name: X-User-LastName
      schema:
        type: string
      required: false
    X-User-Email:
      in: header
      name: X-User-Email
      schema:
        type: string
      required: false
    X-User-GlobalID:
      in: header
      name: X-User-GlobalID
      schema:
        type: string
      required: false
    Accept-Language:
      in: header
      name: Accept-Language
      description: >
        The header advertises which languages the client is able to understand, and which locale variant is preferred. (By languages, we mean natural languages, such as English, and not programming languages.)
      schema:
        $ref: '#/components/schemas/AcceptedLanguageEnum'
      required: false
  responses:
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    BadRequest:
      description: Bad request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    NotFound:
      description: The specified resource was not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
  schemas:
    StudentSpecificProfile:
      type: object
      nullable: true
      properties:
        type:
          $ref: '#/components/schemas/TypePepsEnum'
        type_text:
          type: string
        subtype:
          nullable: true
          $ref: '#/components/schemas/SubtypeEnum'
        subtype_text:
          type: string
        guide:
          type: string
          nullable: true
          example: "John Doe"
        arrangement_additional_time:
          type: boolean
        arrangement_appropriate_copy:
          type: boolean
        arrangement_other:
          type: boolean
        arrangement_specific_locale:
          type: boolean
        arrangement_comment:
          type: string
          nullable: true
          example: "comment"
    Paging:
      type: object
      properties:
        count:
          type: integer
        next:
          type: string
          format: uri
          nullable: true
        previous:
          type: string
          format: uri
          nullable: true
    PaginatedEnrollmentList:
      allOf:
        - $ref: '#/components/schemas/Paging'
        - type: object
          properties:
            results:
              type: array
              items:
                $ref: '#/components/schemas/Enrollment'
            enrolled_students_count:
              type: integer

    Enrollment:
      type: object
      properties:
        date_enrollment:
          type: string
          format: date
          example: "2021-09-06"
        enrollment_state:
          type: string
          example: "ENROLLED"
        student_last_name:
          type: string
          example: "Doe"
        student_first_name:
          type: string
          example: "John"
        student_email:
          type: string
          example: "john.doe@mail.xyz"
        student_registration_id:
          type: string
          example: "12345678"
        specific_profile:
          $ref: '#/components/schemas/StudentSpecificProfile'
        program:
          type: string
          example: "PRGM1BA"
        learning_unit_acronym:
          type: string
          example: "LABCD1234"
        learning_unit_year:
          type: integer
          example: 2021
    TypePepsEnum:
      type: string
      enum:
        - NOT_DEFINED
        - DISABILITY
        - SPORT
        - ARTIST
        - ENTREPRENEUR
        - ARRANGEMENT_JURY
    SubtypeEnum:
      type: string
      enum:
        - PROMISING_ATHLETE_HL
        - PROMISING_ATHLETE
        - REDUCED_MOBILITY
        - OTHER_DISABILITY
        - ""
    AcceptedLanguageEnum:
      type: string
      enum:
        - 'en'
        - 'fr-be'
    Error:
      type: object
      properties:
        code:
          type: string
        message:
          type: string
      required:
        - code
        - message
security:
  - Token: []
