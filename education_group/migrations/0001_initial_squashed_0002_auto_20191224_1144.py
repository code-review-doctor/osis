# Generated by Django 2.2.13 on 2021-05-28 06:36

import ckeditor.fields
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    replaces = [('education_group', '0001_initial'), ('education_group', '0002_auto_20191224_1144')]

    dependencies = [
        ('base', '0488_auto_20191211_1452'),
    ]

    operations = [
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('external_id', models.CharField(blank=True, db_index=True, max_length=100, null=True)),
                ('changed', models.DateTimeField(auto_now=True, null=True)),
                ('end_year', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='group_end_years', to='base.AcademicYear', verbose_name='End academic year')),
                ('start_year', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='group_start_years', to='base.AcademicYear', verbose_name='Start academic year')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='GroupYear',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('external_id', models.CharField(blank=True, db_index=True, max_length=100, null=True)),
                ('changed', models.DateTimeField(auto_now=True, null=True)),
                ('acronym', models.CharField(db_index=True, max_length=40, verbose_name='Acronym/Short title')),
                ('credits', models.PositiveIntegerField(blank=True, null=True, verbose_name='credits')),
                ('constraint_type', models.CharField(blank=True, choices=[('CREDITS', 'credits'), ('NUMBER_OF_ELEMENTS', 'Number of elements')], default=None, max_length=20, null=True, verbose_name='type of constraint')),
                ('min_constraint', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1)], verbose_name='minimum constraint')),
                ('max_constraint', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1)], verbose_name='maximum constraint')),
                ('title_fr', models.CharField(max_length=255, verbose_name='Title in French')),
                ('title_en', models.CharField(blank=True, default='', max_length=240, verbose_name='Title in English')),
                ('remark_fr', ckeditor.fields.RichTextField(blank=True, default='', verbose_name='remark')),
                ('remark_en', ckeditor.fields.RichTextField(blank=True, default='', verbose_name='remark in english')),
                ('education_group_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.EducationGroupType', verbose_name='Type of training')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='education_group.Group')),
                ('partial_acronym', models.CharField(db_index=True, max_length=15, null=True, verbose_name='code')),
                ('academic_year', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='base.AcademicYear', verbose_name='Academic year')),
                ('management_entity', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='group_management_entity', to='base.Entity', verbose_name='Management entity')),
                ('main_teaching_campus', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='teaching_campus', to='base.Campus', verbose_name='Learning location')),
            ],
            options={
                'abstract': False,
                'unique_together': {('partial_acronym', 'academic_year')},
                'index_together': {('partial_acronym', 'academic_year')},
            },
        ),
    ]
